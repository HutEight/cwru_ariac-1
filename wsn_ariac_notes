ARIAC notes:
  world frame:
    origin is on the floor
    z-axis is "up" and tangent to bin 7 on face opposite rail (not centered on bin--closer to bin 5)
    world x axis points from bin towards rail (parallel to floor)

  bin numbering:
   bin8 is adjacent to rail and is closest to agv1, which is to "left" (agv chosen for example:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.76, 0.28, -1.38, 2.76, 3.27, -1.51, 0.00]}, {time_from_start: {secs: 2}, positions: [1.76, 0.38, -1.38, 1.5, 3.27, -1.51, 0.0]}, {time_from_start: {secs: 3}, positions: [1.76, 2.06, -1.38, 1.5, 3.27, -1.51, 0.0]}, {time_from_start: {secs: 4}, positions: [1.76, 2.06, -0.63, 1.5, 3.27, -1.51, 0.0]}]}" -1

  bin5 is closest to agv2 (and adjacent to rail)

  order:

   --------------------------rail-------------------------
 agv1						           agv2
    bin8	bin7		bin6		bin5	
    bin4	bin3		bin2		bin1

  rail frame: z is up, +y is towards agv1 (opposite belt direction)

  robot base_link frame:  z is "up", origin is centered at bottom (mounting plate);
    +y points towards agv1 (parallel to rail frame)
  but base_link is elevated somewhat above the rail height

  tray frame: origin at center of tray surface; z is up; x points AWAY from conveyor

from tf_echo:
  The current list of frames is:
Frame agv1_load_point_frame exists with parent world.
Frame agv2_load_point_frame exists with parent world.
Frame base exists with parent base_link.
Frame base_link exists with parent linear_arm_actuator.
Frame belt_frame exists with parent world.
Frame bin1_frame exists with parent world.
Frame bin2_frame exists with parent world.
Frame bin3_frame exists with parent world.
Frame bin4_frame exists with parent world.
Frame bin5_frame exists with parent world.
Frame bin6_frame exists with parent world.
Frame bin7_frame exists with parent world.
Frame bin8_frame exists with parent world.
Frame break_beam_frame exists with parent world.
Frame ee_link exists with parent wrist_3_link.
Frame wrist_3_link exists with parent wrist_2_link.
Frame laser_profiler_frame exists with parent world.
Frame logical_camera_frame exists with parent world.
Frame proximity_sensor_frame exists with parent world.
Frame linear_arm_actuator exists with parent world.
Frame tool0 exists with parent wrist_3_link.
Frame forearm_link exists with parent upper_arm_link.
Frame upper_arm_link exists with parent shoulder_link.
Frame shoulder_link exists with parent base_link.
Frame vacuum_gripper_link exists with parent wrist_3_link.
Frame wrist_1_link exists with parent forearm_link.
Frame wrist_2_link exists with parent wrist_1_link.

EXAMPLE agv1 drop-off has rail displacement = 2.06

rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.76, 0.28, -1.38, 2.76, 3.27, -1.51, 0.00]}, {time_from_start: {secs: 2}, positions: [1.76, 0.38, -1.38, 1.5, 3.27, -1.51, 0.0]}, {time_from_start: {secs: 3}, positions: [1.76, 2.06, -1.38, 1.5, 3.27, -1.51, 0.0]}, {time_from_start: {secs: 4}, positions: [1.76, 2.5, -0.63, 1.5, 3.27, -1.51, 0.0]}]}" -1

this did not work:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['linear_arm_actuator_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.0]}]}" -1
Must specify ALL joint angles;



rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.57, 0.28, -1.38, 1.57, 3.27, -1.51, 0.00]}]}" -1

rail limits:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.57, -5, -1.38, 1.57, 3.27, -1.51, 0.00]}]}" -1

2.1 is as close as it can get to agv1
0 is aligned w/ world frame;
-2.1 is closest approach to agv2

rosrun tf tf_echo world bin7_frame:
  - Translation: [-0.300, 0.230, 0.720]

rail (linear_arm_actuator_joint) at 0.230 centers the robot on bins 7/3

rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.57, 0.230, -1.38, 1.57, 3.27, -1.51, 0.00]}]}" -1

rosrun tf tf_echo world bin8_frame:
Translation: [-0.300, 0.995, 0.720]
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.57, 0.995, -1.38, 1.57, 3.27, -1.51, 0.00]}]}" -1

rail at 0.995 centers robot base w/ bins 8/4

rosrun tf tf_echo world bin6_frame
- Translation: [-0.300, -0.535, 0.720]

rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.57, -0.535, -1.38, 1.57, 3.27, -1.51, 0.00]}]}" -1

rail at -0.535 centers robot base w/rt bins 6/2

rosrun tf tf_echo world bin5_frame
- Translation: [-0.300, -1.330, 0.720]
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory " {joint_names: ['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: [ {time_from_start: {secs: 1}, positions: [1.57, -1.330, -1.38, 1.57, 3.27, -1.51, 0.00]}]}" -1

rail at -1.330 puts robot base centered on bins 5/1

Rail positions summary:
agv1: 2.1
agv2: -2.1
bins 8/4: 0.995
bins 7/3: 0.230
bins 6/2: -0.535
bins 5/1: -1.330

vacuum_gripper_link frame: origin on surface of gripper, but z-axis points INTO (not out of) flange

rosrun tf tf_echo world vacuum_gripper_link
rosrun tf tf_echo base_link vacuum_gripper_link

rosrun tf tf_echo world piston_rod_part_1_frame
rosrun tf tf_echo bin7_frame piston_rod_part_1_frame
  - Translation: [-0.200, 0.200, 0.004]

rosrun tf tf_echo piston_rod_part_1_frame vacuum_gripper_link
  and tell us the "z" value of the reported translation.
  We need these offsets to know how much clearance to leave the gripper, relative to the part's frame.

from tutorial, to pick up a part:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85, 0.35, -0.38, 2.76, 3.67, -1.51, 0.00]} ]}" -1

rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85, 0.35, -1.38, 2.76, 3.67, -1.51, 0.00]} ]}" -1


-----------camera frame-------------
rostopic echo /ariac/logical_camera

logical_camera_frame

rosrun tf tf_echo logical_camera_frame piston_rod_part_1_frame
- Translation: [1.206, -0.119, -0.198]
- Rotation: in Quaternion [-0.271, -0.652, 0.271, 0.654]
            in RPY (radian) [-1.565, -0.784, 1.566]
            in RPY (degree) [-89.677, -44.917, 89.730]

- Translation: [1.207, -0.119, -0.200]
- Rotation: in Quaternion [-0.267, -0.656, 0.276, 0.650]
            in RPY (radian) [-1.574, -0.783, 1.588]
            in RPY (degree) [-90.171, -44.890, 90.970]


models: (one of these is a close match: )
  - 
    type: piston_rod_part
    pose: 
      position: 
        x: 1.20490610846
        y: -0.119546240999
        z: -0.199117499456
      orientation: 
        x: -0.27183948893
        y: -0.657237483887
        z: 0.267827390505
        w: 0.649931281696
  - 
...

Logical camera reports part poses w/rt logical_camera_frame
NOTE: logical camera has x-axis pointing DOWN (and z axis 
rosrun tf tf_echo world logical_camera_frame:
- Translation: [-0.300, 0.150, 1.930]
- Rotation: in Quaternion [0.000, 0.707, 0.000, 0.707]
            in RPY (radian) [0.000, 1.571, 0.000]
            in RPY (degree) [0.000, 90.000, 0.000]
Thus, camera origin is 1.93m above the floor

--------------parts----------
piston_rod_part, pulley_part, gear_part, gasket_part, Part4, Part3

------------approx joints for pickup------------
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85, 0.230, -0.47, 3.14, 3.33, -1.57, 0.50]} ]}" -1

CHOOSE IK SOLN CLOSEST TO THESE VALUES

qual1a: parts are piston rods on bin7 and gears on bin6
qual1b: parts are gears on bin8 and piston rods on bin7

NOM_BIN6_PICKUP_POSE:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85, -0.535, -0.47, 3.14, 3.33, -1.57, 0.50]} ]}" -1

NOM_BIN7_PICKUP_POSE:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85, 0.230, -0.47, 3.14, 3.33, -1.57, 0.50]} ]}" -1

NOM_BIN8_APPROACH_POSE:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.5, 0.4, -0.8, 2.15, 4.0, -1.57, 0.50]} ]}" -1

rosrun tf tf_echo base_link vacuum_gripper_link
At time 3151.282
- Translation: [-0.674, 0.731, 0.097]
- Rotation: in Quaternion [0.003, 0.003, 0.040, 0.999]
            in RPY (radian) [0.007, 0.005, 0.079]
            in RPY (degree) [0.402, 0.272, 4.539]

rosrun tf tf_echo base_link tool0
- Translation: [-0.674, 0.731, 0.106]
- Rotation: in Quaternion [0.999, 0.040, -0.003, -0.004]


 rosrun ariac_ur_fk_ik ariac_ur10_fk_ik_test_main

 A origin: -0.674187  0.73117 0.106877
 quat: 0.999197, 0.0395932, -0.00352426, -0.00510973

rosrun tf tf_echo tool0 vacuum_gripper_link
- Translation: [0.000, 0.000, 0.008]
- Rotation: in Quaternion [1.000, -0.000, -0.000, -0.000]





rosrun tf tf_echo base_link gear_part_3_frame
- Translation: [-0.805, 0.069, -0.274]

BIN8_RETRACT_CRUISE_POSE:  lifts shoulder to clear before rotating base joint
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85,  0.4, -2.0, 1.57, 3.33, -1.57, 0.50]} ]}" -1

CRUISE_POSE:  rotate base joint to prepare for track motion
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.85, -0.535, -2.0, 1.57, 3.33, -1.57, 0.50]} ]}" -1

AGV_HOVER_POSE:
rostopic pub /ariac/arm/command trajectory_msgs/JointTrajectory "{joint_names: \
['elbow_joint', 'linear_arm_actuator_joint', 'shoulder_lift_joint', 'shoulder_pan_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'], points: \
[{time_from_start: {secs: 1}, positions: [1.0, 2.1, -0.3, 1.4, 4.0, -1.57, 0.0]} ]}" -1

-------------2/18 tests w/ robot motion server----------
sent cmd: 1.85,  0.4, -2.0, 1.57, 3.33, -1.57, 0.50
got states: 1.5701178969577612, 1.850065404044325, -2.0003022317100108, 0.4000071981532596, 3.3295175982825698, -1.570006250001296, 0.499999361045421
hah!  had joint names in wrong order;

example gear part (gear10):
rostopic echo /ariac/logical_camera_1: gives parts in camera frame;

gear_part_6:
rosrun tf tf_echo world gear_part_6_frame
 - Translation: [-0.369, -0.597, 0.726]
- Rotation: in Quaternion [0.022, -0.001, 0.032, 0.999]

destination: AGV1: frame is centered on rail, w/ origin at height 0.750, which is comparable to bin,
  and lower than robot base_link
rosrun tf tf_echo world agv1_load_point_frame
- Translation: [0.300, 3.300, 0.750]
- Rotation: in Quaternion [0.000, 0.000, 1.000, 0.000]

rosrun tf tf_echo world base_link
- Translation: [0.300, 0.000, 1.000]
- Rotation: in Quaternion [0.000, 0.000, 0.000, 1.000]



successful test:
  rosrun osrf_gear gear.py -f `rospack find osrf_gear`/config/qual1a.yaml `rospack find cwru_ariac`/config/ariac_conf.yaml

start the pick/place action server:
  rosrun robot_move_as robot_move_as

run an example client:
  rosrun cwru_ariac robot_move_as_tester

this tester exercises some of Shipei's action-server functions;
in action server (RobotMoveActionServer.h, robot_move_as.cpp, RobotMove.action)
  added funcs for hard-coded move poses

node: robot_move_as_tester.cpp (wsn) uses library:
   RobotMove.cpp/RobotMove.h

successfully commanded robot to go to two pre-defined poses
add more poses in action server w/ existing pose codes








